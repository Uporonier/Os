{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"IncomeChart\",\n  data: function data() {\n    return {\n      sumIncome: 0,\n      categoryIncomes: [],\n      categoryNames: [],\n      incomes: [],\n      activeName: \"bar\",\n      totalAll: 0,\n      totalWeek: 0,\n      totalMonth: 0,\n      total: 0,\n      // 其他属性...\n      hourlyTransactions: [],\n      // 存储一天中每小时的交易次数\n      selectedDate: new Date() // 默认选中今天\n\n    };\n  },\n  methods: {\n    handleDateChange: function handleDateChange(value) {\n      this.fetchHourlyTransactions(value);\n    },\n    fetchHourlyTransactions: function fetchHourlyTransactions(date) {\n      var _this = this;\n\n      var formattedDate = this.formatDate(date);\n      this.request.get(\"/api/income/day?date=\".concat(formattedDate)).then(function (res) {\n        if (res.code === \"200\") {\n          var hourlyData = res.data.hourlyTransactions.map(function (item) {\n            return item.count;\n          });\n\n          _this.updateDayLineChart(hourlyData);\n        }\n      });\n    },\n    updateDayLineChart: function updateDayLineChart(data) {\n      var dayLineOption = this.dayLineChart.getOption();\n      dayLineOption.series[0].data = data;\n      this.dayLineChart.setOption(dayLineOption);\n    },\n    formatDate: function formatDate(date) {\n      return date.toISOString().slice(0, 10); // 转换日期为 YYYY-MM-DD 格式\n    },\n    handleClick: function handleClick(tab) {\n      switch (tab.name) {\n        case \"bar\":\n          this.total = this.totalAll;\n          break;\n\n        case \"pie\":\n          this.total = this.totalAll;\n          break;\n\n        case \"line1\":\n          this.total = this.totalWeek;\n          break;\n\n        case \"line2\":\n          this.total = this.totalMonth;\n          break;\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    // 初始化图表...\n    this.dayLineChart = echarts.init(document.getElementById(\"dayLine\")); // 调用 fetchHourlyTransactions 以加载初始数据\n\n    this.fetchHourlyTransactions(this.selectedDate);\n    var barChart = echarts.init(document.getElementById(\"bar\"));\n    var pieChart = echarts.init(document.getElementById(\"pie\"));\n    var lineChart1 = echarts.init(document.getElementById(\"weekLine\"));\n    var lineChart2 = echarts.init(document.getElementById(\"monthLine\"));\n    var dayLineChart = echarts.init(document.getElementById(\"dayLine\"));\n    var dayLineOption = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      title: {\n        text: \"日流量分析\",\n        x: \"center\"\n      },\n      xAxis: {\n        type: \"category\",\n        data: Array.from({\n          length: 24\n        }, function (_, i) {\n          return \"\".concat(i, \":00-\").concat(i + 1, \":00\");\n        }),\n        axisLabel: {\n          rotate: 45,\n          interval: 0\n        } // 旋转标签以避免重叠\n\n      },\n      yAxis: {\n        type: \"value\"\n      },\n      series: [{\n        data: [],\n        type: \"line\",\n        smooth: true // 平滑曲线\n\n      }]\n    }; // API 请求获取数据\n\n    this.request.get(\"/api/income/day\").then(function (res) {\n      if (res.code === \"200\") {\n        var hourlyData = res.data.hourlyTransactions.map(function (item) {\n          return item.count;\n        }); // 假设每个小时的交易次数在 'count' 属性中\n\n        dayLineOption.series[0].data = hourlyData;\n        dayLineChart.setOption(dayLineOption);\n      }\n    });\n    var barOption = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      title: {\n        text: \"收入统计柱状图\",\n        x: \"center\"\n      },\n      label: {\n        show: true,\n        //是否显示\n        position: \"top\"\n      },\n      xAxis: {\n        type: \"category\",\n        data: []\n      },\n      yAxis: {\n        type: \"value\"\n      },\n      series: [{\n        data: [],\n        type: \"bar\"\n      }]\n    };\n    var pieOption = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      title: {\n        text: \"收入统计饼图\",\n        x: \"center\"\n      },\n      series: [{\n        type: \"pie\",\n        data: []\n      }]\n    };\n    var lineOption1 = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      label: {\n        show: true //是否显示\n\n      },\n      title: {\n        text: \"本周收入\",\n        x: \"center\"\n      },\n      xAxis: {\n        type: \"category\",\n        data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n      },\n      yAxis: {\n        type: \"value\"\n      },\n      series: [{\n        data: [],\n        type: \"line\"\n      }]\n    };\n    var lineOption2 = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      label: {\n        show: true //是否显示\n\n      },\n      title: {\n        text: \"本月收入\",\n        x: \"center\"\n      },\n      xAxis: {\n        type: \"category\",\n        data: []\n      },\n      yAxis: {\n        type: \"value\"\n      },\n      series: [{\n        data: [],\n        type: \"line\"\n      }]\n    }; //渲染柱状图和饼图\n\n    this.request.get(\"/api/income/chart\").then(function (res) {\n      if (res.code === \"200\") {\n        var categoryIncomes = res.data.categoryIncomes;\n        var categoryNames = categoryIncomes.map(function (item) {\n          return item.categoryName;\n        });\n        var incomes = categoryIncomes.map(function (item) {\n          return item.categoryIncome;\n        });\n        barOption.xAxis.data = categoryNames;\n        barOption.series[0].data = incomes;\n        barChart.setOption(barOption);\n\n        for (var i = 0; i < categoryNames.length; i++) {\n          var item = {\n            value: incomes[i],\n            name: categoryNames[i]\n          };\n          pieOption.series[0].data.push(item);\n        }\n\n        pieChart.setOption(pieOption); //计算总和\n\n        var sum = 0;\n        incomes.forEach(function (item) {\n          sum += item;\n        });\n        _this2.total = sum;\n        _this2.totalAll = sum;\n      }\n    }); //渲染本周折线图\n\n    this.request.get(\"/api/income/week\").then(function (res) {\n      if (res.code === \"200\") {\n        // lineOption1.xAxis.data = res.data.weekDays;\n        var weekIncome = res.data.weekIncome;\n        lineOption1.series[0].data = weekIncome;\n        lineChart1.setOption(lineOption1); //计算本周总营收\n\n        var sum = 0;\n        weekIncome.forEach(function (item) {\n          sum += item;\n        });\n        _this2.totalWeek = sum;\n      }\n    }); //渲染本月折线图\n\n    this.request.get(\"/api/income/month\").then(function (res) {\n      if (res.code === \"200\") {\n        lineOption2.xAxis.data = res.data.monthDays;\n        var monthIncome = res.data.monthIncome;\n        lineOption2.series[0].data = monthIncome;\n        lineChart2.setOption(lineOption2); //计算本月总营收\n\n        var sum = 0;\n        monthIncome.forEach(function (item) {\n          sum += item;\n        });\n        _this2.totalMonth = sum;\n      }\n    });\n  },\n  filters: {\n    numFilter: function numFilter(value) {\n      // 截取当前数据到小数点后两位\n      var realVal = Number(value).toFixed(2); // num.toFixed(2)获取的是字符串\n\n      return Number(realVal);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACAA,qBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,kBADA;AAEAC,yBAFA;AAGAC,uBAHA;AAIAC,iBAJA;AAKAC,uBALA;AAMAC,iBANA;AAOAC,kBAPA;AAQAC,mBARA;AASAC,cATA;AAUA;AACAC,4BAXA;AAWA;AACAC,8BAZA,CAYA;;AAZA;AAcA,GAjBA;AAkBAC;AACAC,oBADA,4BACAC,KADA,EACA;AACA;AACA,KAHA;AAIAC,2BAJA,mCAIAC,IAJA,EAIA;AAAA;;AACA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACA;AACA,OALA;AAMA,KAZA;AAaAC,sBAbA,8BAaAjB,IAbA,EAaA;AACA;AACAkB;AACA;AACA,KAjBA;AAkBAC,cAlBA,sBAkBAH,IAlBA,EAkBA;AACA,6CADA,CACA;AACA,KApBA;AAqBAI,eArBA,uBAqBAC,GArBA,EAqBA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AAZA;AAcA;AApCA,GAlBA;AAyDAC,SAzDA,qBAyDA;AAAA;;AAEA;AACA,yEAHA,CAIA;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACAC;AAAAC;AAAA,OADA;AAEAC;AAAAC;AAAAC;AAAA,OAFA;AAGAC;AACAC,wBADA;AAEA7B;AAAA8B;AAAA;AAAA;AAAA,UAFA;AAGAC;AAAAC;AAAAC;AAAA,SAHA,CAGA;;AAHA,OAHA;AAQAC;AAAAL;AAAA,OARA;AASAM;AACAnC,gBADA;AAEA6B,oBAFA;AAGAO,oBAHA,CAGA;;AAHA;AATA,MAbA,CA6BA;;AACA;AACA;AACA;AAAA;AAAA,WADA,CACA;;AACAlB;AACAmB;AACA;AACA,KANA;AAUA;AACAd;AACAC;AADA,OADA;AAIAC;AACAC,uBADA;AAEAC;AAFA,OAJA;AAQAW;AACAC,kBADA;AACA;AACAC;AAFA,OARA;AAYAZ;AACAC,wBADA;AAEA7B;AAFA,OAZA;AAgBAkC;AACAL;AADA,OAhBA;AAmBAM,eACA;AACAnC,gBADA;AAEA6B;AAFA,OADA;AAnBA;AA0BA;AACAN;AACAC;AADA,OADA;AAKAC;AACAC,sBADA;AAEAC;AAFA,OALA;AASAQ,eACA;AACAN,mBADA;AAEA7B;AAFA,OADA;AATA;AAgBA;AACAuB;AACAC;AADA,OADA;AAIAc;AACAC,kBADA,CACA;;AADA,OAJA;AAOAd;AACAC,oBADA;AAEAC;AAFA,OAPA;AAWAC;AACAC,wBADA;AAEA7B;AAFA,OAXA;AAeAkC;AACAL;AADA,OAfA;AAkBAM,eACA;AACAnC,gBADA;AAEA6B;AAFA,OADA;AAlBA;AAyBA;AACAN;AACAC;AADA,OADA;AAIAc;AACAC,kBADA,CACA;;AADA,OAJA;AAOAd;AACAC,oBADA;AAEAC;AAFA,OAPA;AAWAC;AACAC,wBADA;AAEA7B;AAFA,OAXA;AAeAkC;AACAL;AADA,OAfA;AAkBAM,eACA;AACAnC,gBADA;AAEA6B;AAFA,OADA;AAlBA,MA3GA,CAoIA;;AACA;AACA;AACA;AACA;AACA;AACA,SAFA;AAGA;AACA;AACA,SAFA;AAGAY;AACAA;AACAC;;AAEA;AACA;AAAA5B;AAAAf;AAAA;AACA4C;AACA;;AACAC,sCAhBA,CAiBA;;AACA;AACAxC;AACAyC;AACA,SAFA;AAGA;AACA;AACA;AACA,KA1BA,EArIA,CAgKA;;AACA;AACA;AACA;AACA;AACAC;AACAC,0CAJA,CAKA;;AACA;AACAC;AACAH;AACA,SAFA;AAGA;AACA;AACA,KAbA,EAjKA,CA+KA;;AACA;AACA;AACAI;AACA;AACAA;AACAC,0CAJA,CAKA;;AACA;AACAC;AACAN;AACA,SAFA;AAGA;AACA;AACA,KAbA;AAcA,GAvPA;AAwPAO;AACAC,aADA,qBACAvC,KADA,EACA;AACA;AAEA,6CAHA,CAKA;;AAEA;AACA;AATA;AAxPA","names":["name","data","sumIncome","categoryIncomes","categoryNames","incomes","activeName","totalAll","totalWeek","totalMonth","total","hourlyTransactions","selectedDate","methods","handleDateChange","value","fetchHourlyTransactions","date","updateDayLineChart","dayLineOption","formatDate","handleClick","tab","mounted","tooltip","trigger","title","text","x","xAxis","type","length","axisLabel","rotate","interval","yAxis","series","smooth","dayLineChart","label","show","position","barOption","barChart","pieOption","pieChart","sum","lineOption1","lineChart1","weekIncome","lineOption2","lineChart2","monthIncome","filters","numFilter"],"sourceRoot":"src/views/manage/income","sources":["IncomeChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n      <el-card\r\n        style=\"\r\n          display: inline-block;\r\n          margin-left: 50px;\r\n          margin-top: 30px;\r\n          font-weight: bold;\r\n          font-size: 22px;\r\n          color: #ffb02a;\r\n        \"\r\n        >￥总计：{{ total | numFilter }}</el-card\r\n      >\r\n      <!--      柱状图-->\r\n      <el-tab-pane label=\"各类收入柱状图\" name=\"bar\">\r\n        <div\r\n          id=\"bar\"\r\n          style=\"width: 1200px; height: 500px; margin: auto auto\"\r\n        ></div>\r\n      </el-tab-pane>\r\n      <!--      饼图-->\r\n      <el-tab-pane label=\"各类收入饼图\" name=\"pie\">\r\n        <div\r\n          id=\"pie\"\r\n          style=\"width: 600px; height: 600px; margin: 10px auto\"\r\n        ></div>\r\n      </el-tab-pane>\r\n      <!--  本周收入折线图-->\r\n      <el-tab-pane label=\"本周收入\" name=\"line1\">\r\n        <div\r\n          id=\"weekLine\"\r\n          style=\"width: 900px; height: 500px; margin: 10px auto\"\r\n        ></div>\r\n      </el-tab-pane>\r\n      <!-- 本月收入折线图-->\r\n      <el-tab-pane label=\"本月收入\" name=\"line2\">\r\n        <div\r\n          id=\"monthLine\"\r\n          style=\"width: 1500px; height: 500px; margin: 10px auto\"\r\n        ></div>\r\n      </el-tab-pane>\r\n\r\n\r\n      <el-tab-pane label=\"日流量分析\" name=\"line3\">\r\n        <el-date-picker\r\n            v-model=\"selectedDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择日期\"\r\n            style=\"margin-bottom: 20px;\"\r\n            @change=\"handleDateChange\">\r\n        </el-date-picker>\r\n        <div id=\"dayLine\" style=\"width: 1500px; height: 500px; margin: 10px auto\"></div>\r\n      </el-tab-pane>\r\n\r\n\r\n\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  name: \"IncomeChart\",\r\n  data() {\r\n    return {\r\n      sumIncome: 0,\r\n      categoryIncomes: [],\r\n      categoryNames: [],\r\n      incomes: [],\r\n      activeName: \"bar\",\r\n      totalAll: 0,\r\n      totalWeek: 0,\r\n      totalMonth: 0,\r\n      total: 0,\r\n      // 其他属性...\r\n      hourlyTransactions: [], // 存储一天中每小时的交易次数\r\n      selectedDate: new Date(),  // 默认选中今天\r\n    };\r\n  },\r\n  methods: {\r\n    handleDateChange(value) {\r\n      this.fetchHourlyTransactions(value);\r\n    },\r\n    fetchHourlyTransactions(date) {\r\n      let formattedDate = this.formatDate(date);\r\n      this.request.get(`/api/income/day?date=${formattedDate}`).then((res) => {\r\n        if (res.code === \"200\") {\r\n          let hourlyData = res.data.hourlyTransactions.map(item => item.count);\r\n          this.updateDayLineChart(hourlyData);\r\n        }\r\n      });\r\n    },\r\n    updateDayLineChart(data) {\r\n      let dayLineOption = this.dayLineChart.getOption();\r\n      dayLineOption.series[0].data = data;\r\n      this.dayLineChart.setOption(dayLineOption);\r\n    },\r\n    formatDate(date) {\r\n      return date.toISOString().slice(0, 10); // 转换日期为 YYYY-MM-DD 格式\r\n    },\r\n    handleClick(tab) {\r\n      switch (tab.name) {\r\n        case \"bar\":\r\n          this.total = this.totalAll;\r\n          break;\r\n        case \"pie\":\r\n          this.total = this.totalAll;\r\n          break;\r\n        case \"line1\":\r\n          this.total = this.totalWeek;\r\n          break;\r\n        case \"line2\":\r\n          this.total = this.totalMonth;\r\n          break;\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n\r\n    // 初始化图表...\r\n    this.dayLineChart = echarts.init(document.getElementById(\"dayLine\"));\r\n    // 调用 fetchHourlyTransactions 以加载初始数据\r\n    this.fetchHourlyTransactions(this.selectedDate);\r\n\r\n\r\n    var barChart = echarts.init(document.getElementById(\"bar\"));\r\n    var pieChart = echarts.init(document.getElementById(\"pie\"));\r\n    var lineChart1 = echarts.init(document.getElementById(\"weekLine\"));\r\n    var lineChart2 = echarts.init(document.getElementById(\"monthLine\"));\r\n    var dayLineChart = echarts.init(document.getElementById(\"dayLine\"));\r\n    var dayLineOption = {\r\n      tooltip: { trigger: \"item\" },\r\n      title: { text: \"日流量分析\", x: \"center\" },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: Array.from({ length: 24 }, (_, i) => `${i}:00-${i + 1}:00`),\r\n        axisLabel: { rotate: 45, interval: 0 } // 旋转标签以避免重叠\r\n      },\r\n      yAxis: { type: \"value\" },\r\n      series: [{\r\n        data: [],\r\n        type: \"line\",\r\n        smooth: true // 平滑曲线\r\n      }]\r\n    };\r\n\r\n    // API 请求获取数据\r\n    this.request.get(\"/api/income/day\").then((res) => {\r\n      if (res.code === \"200\") {\r\n        let hourlyData = res.data.hourlyTransactions.map(item => item.count); // 假设每个小时的交易次数在 'count' 属性中\r\n        dayLineOption.series[0].data = hourlyData;\r\n        dayLineChart.setOption(dayLineOption);\r\n      }\r\n    });\r\n\r\n\r\n\r\n    var barOption = {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      title: {\r\n        text: \"收入统计柱状图\",\r\n        x: \"center\",\r\n      },\r\n      label: {\r\n        show: true, //是否显示\r\n        position: \"top\",\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: [],\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          data: [],\r\n          type: \"bar\",\r\n        },\r\n      ],\r\n    };\r\n    var pieOption = {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n\r\n      title: {\r\n        text: \"收入统计饼图\",\r\n        x: \"center\",\r\n      },\r\n      series: [\r\n        {\r\n          type: \"pie\",\r\n          data: [],\r\n        },\r\n      ],\r\n    };\r\n    var lineOption1 = {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      label: {\r\n        show: true, //是否显示\r\n      },\r\n      title: {\r\n        text: \"本周收入\",\r\n        x: \"center\",\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          data: [],\r\n          type: \"line\",\r\n        },\r\n      ],\r\n    };\r\n    var lineOption2 = {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      label: {\r\n        show: true, //是否显示\r\n      },\r\n      title: {\r\n        text: \"本月收入\",\r\n        x: \"center\",\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: [],\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          data: [],\r\n          type: \"line\",\r\n        },\r\n      ],\r\n    };\r\n    //渲染柱状图和饼图\r\n    this.request.get(\"/api/income/chart\").then((res) => {\r\n      if (res.code === \"200\") {\r\n        let categoryIncomes = res.data.categoryIncomes;\r\n        let categoryNames = categoryIncomes.map((item) => {\r\n          return item.categoryName;\r\n        });\r\n        let incomes = categoryIncomes.map((item) => {\r\n          return item.categoryIncome;\r\n        });\r\n        barOption.xAxis.data = categoryNames;\r\n        barOption.series[0].data = incomes;\r\n        barChart.setOption(barOption);\r\n\r\n        for (let i = 0; i < categoryNames.length; i++) {\r\n          let item = { value: incomes[i], name: categoryNames[i] };\r\n          pieOption.series[0].data.push(item);\r\n        }\r\n        pieChart.setOption(pieOption);\r\n        //计算总和\r\n        let sum = 0;\r\n        incomes.forEach((item) => {\r\n          sum += item;\r\n        });\r\n        this.total = sum;\r\n        this.totalAll = sum;\r\n      }\r\n    });\r\n    //渲染本周折线图\r\n    this.request.get(\"/api/income/week\").then((res) => {\r\n      if (res.code === \"200\") {\r\n        // lineOption1.xAxis.data = res.data.weekDays;\r\n        let weekIncome = res.data.weekIncome;\r\n        lineOption1.series[0].data = weekIncome;\r\n        lineChart1.setOption(lineOption1);\r\n        //计算本周总营收\r\n        let sum = 0;\r\n        weekIncome.forEach((item) => {\r\n          sum += item;\r\n        });\r\n        this.totalWeek = sum;\r\n      }\r\n    });\r\n    //渲染本月折线图\r\n    this.request.get(\"/api/income/month\").then((res) => {\r\n      if (res.code === \"200\") {\r\n        lineOption2.xAxis.data = res.data.monthDays;\r\n        let monthIncome = res.data.monthIncome;\r\n        lineOption2.series[0].data = monthIncome;\r\n        lineChart2.setOption(lineOption2);\r\n        //计算本月总营收\r\n        let sum = 0;\r\n        monthIncome.forEach((item) => {\r\n          sum += item;\r\n        });\r\n        this.totalMonth = sum;\r\n      }\r\n    });\r\n  },\r\n  filters: {\r\n    numFilter(value) {\r\n      // 截取当前数据到小数点后两位\r\n\r\n      let realVal = Number(value).toFixed(2);\r\n\r\n      // num.toFixed(2)获取的是字符串\r\n\r\n      return Number(realVal);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}