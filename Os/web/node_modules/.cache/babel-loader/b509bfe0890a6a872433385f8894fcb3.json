{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport search from \"../../../components/Search\";\nimport API from \"@/utils/request\";\nexport default {\n  name: \"GoodList\",\n  data: function data() {\n    return {\n      //分类icon，每个icon包含id、value、categories对象数组.category：id，name\n      icons: [],\n      total: 0,\n      pageSize: 9,\n      currentPage: 1,\n      //选择的分类\n      categoryId: Number,\n      //搜索的内容\n      searchText: \"\",\n      good: [],\n      baseApi: this.$store.state.baseApi\n    };\n  },\n  components: {\n    search: search\n  },\n  created: function created() {\n    //二者一般不同时存在\n    this.searchText = this.$route.query.searchText;\n    this.categoryId = this.$route.query.categoryId; // this.loadCategories();\n\n    this.load();\n  },\n  methods: {\n    loadCategories: function loadCategories() {\n      var _this = this;\n\n      this.request.get(\"/api/icon\").then(function (res) {\n        if (res.code === \"200\") {\n          _this.icons = res.data;\n        }\n      });\n    },\n    handleCurrentPage: function handleCurrentPage(currentPage) {\n      this.currentPage = currentPage;\n      this.load();\n    },\n    handleSearch: function handleSearch(text) {\n      this.searchText = text;\n      this.load();\n    },\n    load: function load() {\n      var _this2 = this;\n\n      // 假设 userId 可以从 Vuex、localStorage 或 Vue Router 中获取\n      var userId = 0; // 仅作为示例，请根据实际情况替换\n      // 从localStorage中获取用户信息字符串\n\n      var userStr = localStorage.getItem(\"user\"); // 将字符串转换为JavaScript对象\n\n      var user = JSON.parse(userStr); // 替换原有的 API 路径和参数\n\n      this.request.get(\"/recommend/user/\".concat(user.id), {\n        withCredentials: true\n      }).then(function (res) {\n        console.log(res);\n\n        if (res.code === \"200\") {\n          // 假设后端返回的数据结构是 { code: \"200\", data: [商品列表] }\n          // 你可能需要根据实际返回的数据结构进行调整\n          console.log(res);\n          _this2.good = res.data; // 注意：如果推荐接口不支持分页，则可能需要移除或调整分页逻辑\n        }\n      });\n    } //     load() {\n    //       // 从localStorage中获取用户信息字符串\n    //       var userStr = localStorage.getItem(\"user\");\n    //       const user = JSON.parse(userStr); // 将字符串转换为JavaScript对象\n    //\n    //       // 调整API请求路径以匹配新的分页推荐接口，并传递分页参数\n    //       API.get(`/recommend/page/${user.id}?page=${this.currentPage-1}&size=${this.pageSize-1}`, { withCredentials: true })\n    //           .then((response) => {\n    //             const res = response.data;\n    //             if (res.code === \"200\") {\n    //               this.good = res.data.content; // 使用content数组更新商品列表\n    //               this.total = res.data.totalElements; // 使用totalElements更新总商品数\n    //               // 更新当前页码（如果需要）和页面大小\n    //               this.currentPage = res.data.number + 1; // 后端分页可能从0开始，而前端从1开始\n    //               this.pageSize = res.data.size;\n    //             }\n    //           })\n    //           .catch((error) => {\n    //             console.error(\"请求推荐商品失败：\", error);\n    //           });\n    //     },\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACAA,kBADA;AAEAC,MAFA,kBAEA;AACA;AACA;AACAC,eAFA;AAGAC,cAHA;AAIAC,iBAJA;AAKAC,oBALA;AAMA;AACAC,wBAPA;AAQA;AACAC,oBATA;AAUAC,cAVA;AAWAC;AAXA;AAaA,GAhBA;AAiBAC;AACAC;AADA,GAjBA;AAoBAC,SApBA,qBAoBA;AACA;AACA;AACA,mDAHA,CAKA;;AACA;AACA,GA3BA;AA4BAC;AACAC,kBADA,4BACA;AAAA;;AACA;AACA;AACA;AACA;AACA,OAJA;AAKA,KAPA;AAQAC,qBARA,6BAQAV,WARA,EAQA;AACA;AACA;AACA,KAXA;AAYAW,gBAZA,wBAYAC,IAZA,EAYA;AACA;AACA;AACA,KAfA;AAgBAC,QAhBA,kBAgBA;AAAA;;AAEA;AACA,qBAHA,CAGA;AAEA;;AACA,iDANA,CAQA;;AACA,qCATA,CAUA;;AACA;AAAAC;AAAA,SAEAC,IAFA,CAEA;AACAC;;AACA;AACA;AACA;AACAA;AACA,iCAJA,CAKA;AACA;AACA,OAXA;AAYA,KAvCA,CAwCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5DA;AA5BA","names":["name","data","icons","total","pageSize","currentPage","categoryId","searchText","good","baseApi","components","search","created","methods","loadCategories","handleCurrentPage","handleSearch","text","load","withCredentials","then","console"],"sourceRoot":"src/views/front/recommend","sources":["Recommend.vue"],"sourcesContent":["  <template>\r\n    <div>\r\n      <div class=\"main-box\">\r\n        <div style=\"margin: 20px auto\">\r\n          <h2>\r\n            <i class=\"el-icon-star-on\"></i>\r\n            下面是您可能喜欢的商品\r\n          </h2>\r\n\r\n          <hr />\r\n          <el-row :gutter=\"20\">\r\n            <el-col\r\n                :span=\"6\"\r\n                v-for=\"good in good\"\r\n                :key=\"good.id\"\r\n                style=\"margin-bottom: 20px\"\r\n            >\r\n              <!--            商品格子-->\r\n              <router-link :to=\"'goodview/' + good.id\">\r\n                <el-card :body-style=\"{ padding: '0px', background: '#e3f5f4' }\">\r\n                  <img\r\n                      :src=\"baseApi + good.imgs\"\r\n                      style=\"width: 100%; height: 300px\"\r\n                  />\r\n                  <div style=\"padding: 5px 10px\">\r\n                    <span style=\"font-size: 18px\">{{ good.name }}</span\r\n                    ><br />\r\n<!--                    <span style=\"color: red; font-size: 15px\"-->\r\n<!--                    >￥{{ good.price }}</span-->\r\n<!--                    >-->\r\n                  </div>\r\n                </el-card>\r\n              </router-link>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n        <!--      分页-->\r\n        <div class=\"block\" style=\"text-align: center\">\r\n          <el-pagination\r\n              background\r\n              :hide-on-single-page=\"false\"\r\n              :current-page=\"currentPage\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, prev, pager, next\"\r\n              :total=\"total\"\r\n              @current-change=\"handleCurrentPage\"\r\n          >\r\n          </el-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\n  import search from \"../../../components/Search\";\r\n  import API from \"@/utils/request\";\r\n  export default {\r\n    name: \"GoodList\",\r\n    data() {\r\n      return {\r\n        //分类icon，每个icon包含id、value、categories对象数组.category：id，name\r\n        icons: [],\r\n        total: 0,\r\n        pageSize: 9,\r\n        currentPage: 1,\r\n        //选择的分类\r\n        categoryId: Number,\r\n        //搜索的内容\r\n        searchText: \"\",\r\n        good: [],\r\n        baseApi: this.$store.state.baseApi,\r\n      };\r\n    },\r\n    components: {\r\n      search,\r\n    },\r\n    created() {\r\n      //二者一般不同时存在\r\n      this.searchText = this.$route.query.searchText;\r\n      this.categoryId = this.$route.query.categoryId;\r\n\r\n      // this.loadCategories();\r\n      this.load();\r\n    },\r\n    methods: {\r\n      loadCategories() {\r\n        this.request.get(\"/api/icon\").then((res) => {\r\n          if (res.code === \"200\") {\r\n            this.icons = res.data;\r\n          }\r\n        });\r\n      },\r\n      handleCurrentPage(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.load();\r\n      },\r\n      handleSearch(text) {\r\n        this.searchText = text;\r\n        this.load();\r\n      },\r\n      load() {\r\n\r\n        // 假设 userId 可以从 Vuex、localStorage 或 Vue Router 中获取\r\n        var userId = 0; // 仅作为示例，请根据实际情况替换\r\n\r\n        // 从localStorage中获取用户信息字符串\r\n        var userStr = localStorage.getItem(\"user\");\r\n\r\n  // 将字符串转换为JavaScript对象\r\n        var user = JSON.parse(userStr);\r\n        // 替换原有的 API 路径和参数\r\n        this.request.get(`/recommend/user/${user.id}`, { withCredentials: true })\r\n\r\n            .then((res) => {\r\n              console.log(res)\r\n              if (res.code === \"200\") {\r\n                // 假设后端返回的数据结构是 { code: \"200\", data: [商品列表] }\r\n                // 你可能需要根据实际返回的数据结构进行调整\r\n                console.log(res)\r\n                this.good = res.data;\r\n                // 注意：如果推荐接口不支持分页，则可能需要移除或调整分页逻辑\r\n              }\r\n            });\r\n      },\r\n  //     load() {\r\n  //       // 从localStorage中获取用户信息字符串\r\n  //       var userStr = localStorage.getItem(\"user\");\r\n  //       const user = JSON.parse(userStr); // 将字符串转换为JavaScript对象\r\n  //\r\n  //       // 调整API请求路径以匹配新的分页推荐接口，并传递分页参数\r\n  //       API.get(`/recommend/page/${user.id}?page=${this.currentPage-1}&size=${this.pageSize-1}`, { withCredentials: true })\r\n  //           .then((response) => {\r\n  //             const res = response.data;\r\n  //             if (res.code === \"200\") {\r\n  //               this.good = res.data.content; // 使用content数组更新商品列表\r\n  //               this.total = res.data.totalElements; // 使用totalElements更新总商品数\r\n  //               // 更新当前页码（如果需要）和页面大小\r\n  //               this.currentPage = res.data.number + 1; // 后端分页可能从0开始，而前端从1开始\r\n  //               this.pageSize = res.data.size;\r\n  //             }\r\n  //           })\r\n  //           .catch((error) => {\r\n  //             console.error(\"请求推荐商品失败：\", error);\r\n  //           });\r\n  //     },\r\n\r\n\r\n    },\r\n\r\n  };\r\n  </script>\r\n\r\n  <style scoped>\r\n  .main-box {\r\n    background-color: white;\r\n    border: white 2px solid;\r\n    border-radius: 40px;\r\n    padding: 20px 40px;\r\n    margin: 5px auto;\r\n  }\r\n\r\n  .black {\r\n    color: black;\r\n  }\r\n\r\n  .grey {\r\n    color: grey;\r\n  }\r\n  </style>"]},"metadata":{},"sourceType":"module"}