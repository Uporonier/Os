{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"IncomeChart\",\n  data: function data() {\n    return {\n      sumIncome: 0,\n      categoryIncomes: [],\n      categoryNames: [],\n      incomes: [],\n      activeName: \"bar\",\n      totalAll: 0,\n      totalWeek: 0,\n      totalMonth: 0,\n      total: 0,\n      // 其他已定义的数据...\n      selectedDate: new Date(),\n      // 默认选择当前日期\n      hourlyOrders: []\n    };\n  },\n  methods: {\n    fetchHourlyOrders: function fetchHourlyOrders() {\n      var _this = this;\n\n      // 手动格式化日期\n      var year = this.selectedDate.getFullYear();\n      var month = this.selectedDate.getMonth() + 1; // getMonth() 返回 0-11，表示1-12月，所以需要+1\n\n      var day = this.selectedDate.getDate(); // 确保月份和日期始终是两位数\n\n      var formattedMonth = month < 10 ? \"0\".concat(month) : month;\n      var formattedDay = day < 10 ? \"0\".concat(day) : day;\n      var dateStr = \"\".concat(year, \"-\").concat(formattedMonth, \"-\").concat(formattedDay); // 格式化日期为 YYYY-MM-DD\n\n      console.log(dateStr);\n      this.request.get(\"/api/income/day?date=\".concat(dateStr)).then(function (res) {\n        if (res.code === \"200\") {\n          console.log(res.data);\n          _this.hourlyOrders = res.data;\n\n          _this.updateHourlyOrdersChart();\n        }\n      });\n    },\n    updateHourlyOrdersChart: function updateHourlyOrdersChart() {\n      var hourlyChart = echarts.init(document.getElementById('hourlyOrdersChart'));\n      var option = {\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: ['0点', '1点', '2点', '3点', '4点', '5点', '6点', '7点', '8点', '9点', '10点', '11点', '12点', '13点', '14点', '15点', '16点', '17点', '18点', '19点', '20点', '21点', '22点', '23点']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.hourlyOrders,\n          type: 'line',\n          smooth: true // 使线条平滑\n\n        }]\n      };\n      hourlyChart.setOption(option);\n    },\n    handleClick: function handleClick(tab) {\n      switch (tab.name) {\n        case \"bar\":\n          this.total = this.totalAll;\n          break;\n\n        case \"pie\":\n          this.total = this.totalAll;\n          break;\n\n        case \"line1\":\n          this.total = this.totalWeek;\n          break;\n\n        case \"line2\":\n          this.total = this.totalMonth;\n          break;\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    var barChart = echarts.init(document.getElementById(\"bar\"));\n    var pieChart = echarts.init(document.getElementById(\"pie\"));\n    var lineChart1 = echarts.init(document.getElementById(\"weekLine\"));\n    var lineChart2 = echarts.init(document.getElementById(\"monthLine\"));\n    var barOption = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      title: {\n        text: \"收入统计柱状图\",\n        x: \"center\"\n      },\n      label: {\n        show: true,\n        //是否显示\n        position: \"top\"\n      },\n      xAxis: {\n        type: \"category\",\n        data: []\n      },\n      yAxis: {\n        type: \"value\"\n      },\n      series: [{\n        data: [],\n        type: \"bar\"\n      }]\n    };\n    var pieOption = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      title: {\n        text: \"收入统计饼图\",\n        x: \"center\"\n      },\n      series: [{\n        type: \"pie\",\n        data: []\n      }]\n    };\n    var lineOption1 = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      label: {\n        show: true //是否显示\n\n      },\n      title: {\n        text: \"本周收入\",\n        x: \"center\"\n      },\n      xAxis: {\n        type: \"category\",\n        data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n      },\n      yAxis: {\n        type: \"value\"\n      },\n      series: [{\n        data: [],\n        type: \"line\"\n      }]\n    };\n    var lineOption2 = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      label: {\n        show: true //是否显示\n\n      },\n      title: {\n        text: \"本月收入\",\n        x: \"center\"\n      },\n      xAxis: {\n        type: \"category\",\n        data: []\n      },\n      yAxis: {\n        type: \"value\"\n      },\n      series: [{\n        data: [],\n        type: \"line\"\n      }]\n    }; //渲染柱状图和饼图\n\n    this.request.get(\"/api/income/chart\").then(function (res) {\n      if (res.code === \"200\") {\n        var categoryIncomes = res.data.categoryIncomes;\n        var categoryNames = categoryIncomes.map(function (item) {\n          return item.categoryName;\n        });\n        var incomes = categoryIncomes.map(function (item) {\n          return item.categoryIncome;\n        });\n        barOption.xAxis.data = categoryNames;\n        barOption.series[0].data = incomes;\n        barChart.setOption(barOption);\n\n        for (var i = 0; i < categoryNames.length; i++) {\n          var item = {\n            value: incomes[i],\n            name: categoryNames[i]\n          };\n          pieOption.series[0].data.push(item);\n        }\n\n        pieChart.setOption(pieOption); //计算总和\n\n        var sum = 0;\n        incomes.forEach(function (item) {\n          sum += item;\n        });\n        _this2.total = sum;\n        _this2.totalAll = sum;\n      }\n    }); //渲染本周折线图\n\n    this.request.get(\"/api/income/week\").then(function (res) {\n      if (res.code === \"200\") {\n        // lineOption1.xAxis.data = res.data.weekDays;\n        var weekIncome = res.data.weekIncome;\n        lineOption1.series[0].data = weekIncome;\n        lineChart1.setOption(lineOption1); //计算本周总营收\n\n        var sum = 0;\n        weekIncome.forEach(function (item) {\n          sum += item;\n        });\n        _this2.totalWeek = sum;\n      }\n    }); //渲染本月折线图\n\n    this.request.get(\"/api/income/month\").then(function (res) {\n      if (res.code === \"200\") {\n        lineOption2.xAxis.data = res.data.monthDays;\n        var monthIncome = res.data.monthIncome;\n        lineOption2.series[0].data = monthIncome;\n        lineChart2.setOption(lineOption2); //计算本月总营收\n\n        var sum = 0;\n        monthIncome.forEach(function (item) {\n          sum += item;\n        });\n        _this2.totalMonth = sum;\n      }\n    });\n    this.fetchHourlyOrders(); // 初始化时加载当前日期的小时订单数据\n  },\n  filters: {\n    numFilter: function numFilter(value) {\n      // 截取当前数据到小数点后两位\n      var realVal = Number(value).toFixed(2); // num.toFixed(2)获取的是字符串\n\n      return Number(realVal);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACAA,qBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,kBADA;AAEAC,yBAFA;AAGAC,uBAHA;AAIAC,iBAJA;AAKAC,uBALA;AAMAC,iBANA;AAOAC,kBAPA;AAQAC,mBARA;AASAC,cATA;AAUA;AACAC,8BAXA;AAWA;AACAC;AAZA;AAeA,GAlBA;AAmBAC;AACAC,qBADA,+BACA;AAAA;;AACA;AACA;AACA,mDAHA,CAGA;;AACA,4CAJA,CAMA;;AACA;AACA;AAEA,0FAVA,CAUA;;AACAC;AAEA;AACA;AACAA;AACA;;AACA;AACA;AACA,OANA;AAOA,KArBA;AAsBAC,2BAtBA,qCAsBA;AACA;AACA;AACAC;AACAC;AADA,SADA;AAIAC;AACAC,0BADA;AAEAnB;AAFA,SAJA;AAQAoB;AACAD;AADA,SARA;AAWAE;AACArB,iCADA;AAEAmB,sBAFA;AAGAG,sBAHA,CAGA;;AAHA;AAXA;AAiBAC;AACA,KA1CA;AA4CAC,eA5CA,uBA4CAC,GA5CA,EA4CA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AAZA;AAeA;AA5DA,GAnBA;AAkFAC,SAlFA,qBAkFA;AAAA;;AAIA;AACA;AACA;AACA;AAEA;AACAV;AACAC;AADA,OADA;AAIAU;AACAC,uBADA;AAEAC;AAFA,OAJA;AAQAC;AACAC,kBADA;AACA;AACAC;AAFA,OARA;AAYAd;AACAC,wBADA;AAEAnB;AAFA,OAZA;AAgBAoB;AACAD;AADA,OAhBA;AAmBAE,eACA;AACArB,gBADA;AAEAmB;AAFA,OADA;AAnBA;AA0BA;AACAH;AACAC;AADA,OADA;AAKAU;AACAC,sBADA;AAEAC;AAFA,OALA;AASAR,eACA;AACAF,mBADA;AAEAnB;AAFA,OADA;AATA;AAgBA;AACAgB;AACAC;AADA,OADA;AAIAa;AACAC,kBADA,CACA;;AADA,OAJA;AAOAJ;AACAC,oBADA;AAEAC;AAFA,OAPA;AAWAX;AACAC,wBADA;AAEAnB;AAFA,OAXA;AAeAoB;AACAD;AADA,OAfA;AAkBAE,eACA;AACArB,gBADA;AAEAmB;AAFA,OADA;AAlBA;AAyBA;AACAH;AACAC;AADA,OADA;AAIAa;AACAC,kBADA,CACA;;AADA,OAJA;AAOAJ;AACAC,oBADA;AAEAC;AAFA,OAPA;AAWAX;AACAC,wBADA;AAEAnB;AAFA,OAXA;AAeAoB;AACAD;AADA,OAfA;AAkBAE,eACA;AACArB,gBADA;AAEAmB;AAFA,OADA;AAlBA,MA5EA,CAqGA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAFA;AAGA;AACA;AACA,SAFA;AAGAc;AACAA;AACAC;;AAEA;AACA;AAAAC;AAAApC;AAAA;AACAqC;AACA;;AACAC,sCAhBA,CAiBA;;AACA;AACAjC;AACAkC;AACA,SAFA;AAGA;AACA;AACA;AACA,KA1BA,EAvGA,CAkIA;;AACA;AACA;AACA;AACA;AACAC;AACAC,0CAJA,CAKA;;AACA;AACAC;AACAH;AACA,SAFA;AAGA;AACA;AACA,KAbA,EAnIA,CAiJA;;AACA;AACA;AACAI;AACA;AACAA;AACAC,0CAJA,CAKA;;AACA;AACAC;AACAN;AACA,SAFA;AAGA;AACA;AACA,KAbA;AAeA,6BAjKA,CAiKA;AAEA,GArPA;AAsPAO;AACAC,aADA,qBACAX,KADA,EACA;AACA;AAEA,6CAHA,CAKA;;AAEA;AACA;AATA;AAtPA","names":["name","data","sumIncome","categoryIncomes","categoryNames","incomes","activeName","totalAll","totalWeek","totalMonth","total","selectedDate","hourlyOrders","methods","fetchHourlyOrders","console","updateHourlyOrdersChart","tooltip","trigger","xAxis","type","yAxis","series","smooth","hourlyChart","handleClick","tab","mounted","title","text","x","label","show","position","barOption","barChart","value","pieOption","pieChart","sum","lineOption1","lineChart1","weekIncome","lineOption2","lineChart2","monthIncome","filters","numFilter"],"sourceRoot":"src/views/manage/income","sources":["IncomeChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n      <el-card\r\n          v-if=\"activeName !== 'hourly'\"\r\n      style=\"\r\n      display: inline-block;\r\n      margin-left: 50px;\r\n      margin-top: 30px;\r\n      font-weight: bold;\r\n      font-size: 22px;\r\n      color: #ffb02a;\r\n      \"\r\n      >￥总计：{{ total | numFilter }}</el-card>\r\n\r\n      <!--      柱状图-->\r\n      <el-tab-pane label=\"各类收入柱状图\" name=\"bar\">\r\n        <div \r\n          id=\"bar\"\r\n          style=\"width: 1200px; height: 500px; margin: auto auto\"\r\n        ></div>\r\n      </el-tab-pane>\r\n      <!--      饼图-->\r\n      <el-tab-pane label=\"各类收入饼图\" name=\"pie\">\r\n        <div\r\n          id=\"pie\"\r\n          style=\"width: 600px; height: 600px; margin: 10px auto\"\r\n        ></div>\r\n      </el-tab-pane>\r\n      <!--  本周收入折线图-->\r\n      <el-tab-pane label=\"本周收入\" name=\"line1\">\r\n        <div\r\n          id=\"weekLine\"\r\n          style=\"width: 900px; height: 500px; margin: 10px auto\"\r\n        ></div>\r\n      </el-tab-pane>\r\n      <!-- 本月收入折线图-->\r\n      <el-tab-pane label=\"本月收入\" name=\"line2\">\r\n        <div\r\n          id=\"monthLine\"\r\n          style=\"width: 1500px; height: 500px; margin: 10px auto\"\r\n        ></div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"流量统计\" name=\"hourly\">\r\n        <el-date-picker\r\n            v-model=\"selectedDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择日期\"\r\n            style=\"margin-bottom: 20px;\"\r\n            @change=\"fetchHourlyOrders\"\r\n        ></el-date-picker>\r\n        <div id=\"hourlyOrdersChart\" style=\"width: 1000px; height: 500px; margin: auto;\"></div>\r\n      </el-tab-pane>\r\n\r\n\r\n\r\n\r\n\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  name: \"IncomeChart\",\r\n  data() {\r\n    return {\r\n      sumIncome: 0,\r\n      categoryIncomes: [],\r\n      categoryNames: [],\r\n      incomes: [],\r\n      activeName: \"bar\",\r\n      totalAll: 0,\r\n      totalWeek: 0,\r\n      totalMonth: 0,\r\n      total: 0,\r\n      // 其他已定义的数据...\r\n      selectedDate: new Date(), // 默认选择当前日期\r\n      hourlyOrders: []\r\n\r\n    };\r\n  },\r\n  methods: {\r\n    fetchHourlyOrders() {\r\n      // 手动格式化日期\r\n      let year = this.selectedDate.getFullYear();\r\n      let month = this.selectedDate.getMonth() + 1;  // getMonth() 返回 0-11，表示1-12月，所以需要+1\r\n      let day = this.selectedDate.getDate();\r\n\r\n      // 确保月份和日期始终是两位数\r\n      let formattedMonth = month < 10 ? `0${month}` : month;\r\n      let formattedDay = day < 10 ? `0${day}` : day;\r\n\r\n      let dateStr = `${year}-${formattedMonth}-${formattedDay}`; // 格式化日期为 YYYY-MM-DD\r\n      console.log(dateStr);\r\n\r\n      this.request.get(`/api/income/day?date=${dateStr}`).then((res) => {\r\n        if (res.code === \"200\") {\r\n          console.log(res.data)\r\n          this.hourlyOrders = res.data;\r\n          this.updateHourlyOrdersChart();\r\n        }\r\n      });\r\n    },\r\n    updateHourlyOrdersChart() {\r\n      let hourlyChart = echarts.init(document.getElementById('hourlyOrdersChart'));\r\n      let option = {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['0点', '1点', '2点', '3点', '4点', '5点', '6点', '7点', '8点', '9点', '10点', '11点', '12点', '13点', '14点', '15点', '16点', '17点', '18点', '19点', '20点', '21点', '22点', '23点']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          data: this.hourlyOrders,\r\n          type: 'line',\r\n          smooth: true // 使线条平滑\r\n        }]\r\n      };\r\n      hourlyChart.setOption(option);\r\n    },\r\n\r\n    handleClick(tab) {\r\n      switch (tab.name) {\r\n        case \"bar\":\r\n          this.total = this.totalAll;\r\n          break;\r\n        case \"pie\":\r\n          this.total = this.totalAll;\r\n          break;\r\n        case \"line1\":\r\n          this.total = this.totalWeek;\r\n          break;\r\n        case \"line2\":\r\n          this.total = this.totalMonth;\r\n          break;\r\n\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n\r\n\r\n\r\n    var barChart = echarts.init(document.getElementById(\"bar\"));\r\n    var pieChart = echarts.init(document.getElementById(\"pie\"));\r\n    var lineChart1 = echarts.init(document.getElementById(\"weekLine\"));\r\n    var lineChart2 = echarts.init(document.getElementById(\"monthLine\"));\r\n\r\n    var barOption = {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      title: {\r\n        text: \"收入统计柱状图\",\r\n        x: \"center\",\r\n      },\r\n      label: {\r\n        show: true, //是否显示\r\n        position: \"top\",\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: [],\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          data: [],\r\n          type: \"bar\",\r\n        },\r\n      ],\r\n    };\r\n    var pieOption = {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n\r\n      title: {\r\n        text: \"收入统计饼图\",\r\n        x: \"center\",\r\n      },\r\n      series: [\r\n        {\r\n          type: \"pie\",\r\n          data: [],\r\n        },\r\n      ],\r\n    };\r\n    var lineOption1 = {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      label: {\r\n        show: true, //是否显示\r\n      },\r\n      title: {\r\n        text: \"本周收入\",\r\n        x: \"center\",\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          data: [],\r\n          type: \"line\",\r\n        },\r\n      ],\r\n    };\r\n    var lineOption2 = {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      label: {\r\n        show: true, //是否显示\r\n      },\r\n      title: {\r\n        text: \"本月收入\",\r\n        x: \"center\",\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: [],\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          data: [],\r\n          type: \"line\",\r\n        },\r\n      ],\r\n    };\r\n    //渲染柱状图和饼图\r\n\r\n    this.request.get(\"/api/income/chart\").then((res) => {\r\n      if (res.code === \"200\") {\r\n        let categoryIncomes = res.data.categoryIncomes;\r\n        let categoryNames = categoryIncomes.map((item) => {\r\n          return item.categoryName;\r\n        });\r\n        let incomes = categoryIncomes.map((item) => {\r\n          return item.categoryIncome;\r\n        });\r\n        barOption.xAxis.data = categoryNames;\r\n        barOption.series[0].data = incomes;\r\n        barChart.setOption(barOption);\r\n\r\n        for (let i = 0; i < categoryNames.length; i++) {\r\n          let item = { value: incomes[i], name: categoryNames[i] };\r\n          pieOption.series[0].data.push(item);\r\n        }\r\n        pieChart.setOption(pieOption);\r\n        //计算总和\r\n        let sum = 0;\r\n        incomes.forEach((item) => {\r\n          sum += item;\r\n        });\r\n        this.total = sum;\r\n        this.totalAll = sum;\r\n      }\r\n    });\r\n    //渲染本周折线图\r\n    this.request.get(\"/api/income/week\").then((res) => {\r\n      if (res.code === \"200\") {\r\n        // lineOption1.xAxis.data = res.data.weekDays;\r\n        let weekIncome = res.data.weekIncome;\r\n        lineOption1.series[0].data = weekIncome;\r\n        lineChart1.setOption(lineOption1);\r\n        //计算本周总营收\r\n        let sum = 0;\r\n        weekIncome.forEach((item) => {\r\n          sum += item;\r\n        });\r\n        this.totalWeek = sum;\r\n      }\r\n    });\r\n    //渲染本月折线图\r\n    this.request.get(\"/api/income/month\").then((res) => {\r\n      if (res.code === \"200\") {\r\n        lineOption2.xAxis.data = res.data.monthDays;\r\n        let monthIncome = res.data.monthIncome;\r\n        lineOption2.series[0].data = monthIncome;\r\n        lineChart2.setOption(lineOption2);\r\n        //计算本月总营收\r\n        let sum = 0;\r\n        monthIncome.forEach((item) => {\r\n          sum += item;\r\n        });\r\n        this.totalMonth = sum;\r\n      }\r\n    });\r\n\r\n    this.fetchHourlyOrders(); // 初始化时加载当前日期的小时订单数据\r\n\r\n  },\r\n  filters: {\r\n    numFilter(value) {\r\n      // 截取当前数据到小数点后两位\r\n\r\n      let realVal = Number(value).toFixed(2);\r\n\r\n      // num.toFixed(2)获取的是字符串\r\n\r\n      return Number(realVal);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}